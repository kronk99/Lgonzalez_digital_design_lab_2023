module contadorFPGA #(parameter N = 4, parameter F = 12)
  (input logic clk, //se añade el clock
   input logic rst,//se añade el reset
   input logic decremento, //para el boton de decremento
   input logic [N-1:0] valor_inicial,
   output logic [N-1:0] q, //output de la señal
   output logic [6:0] segmentos, //para el 7 segmentos
   output logic reset_active);

  logic [N-1:0] count, next_count; //valores para el count y next con
  logic reset_active_ff; // Flip-flop para mantener el estado del reset activo

  always_ff @(posedge clk or posedge rst)
    if (rst)
    begin
      count <= 0;
      reset_active_ff <= 1;
    end
    else if (decremento && count != 0)
      count <= count - 1;
    else if (valor_inicial != 0)
    begin
      count <= valor_inicial;
      reset_active_ff <= 1;
    end
    else if (count != F)
    begin
      count <= next_count;
      reset_active_ff <= 0;
    end
    else
    begin
      count <= 0;
      reset_active_ff <= 1;
    end

  always_ff @(posedge clk)
    if (rst)
      next_count <= 0;
    else
      next_count <= count + 1;

  // Lógica para el display de 7 segmentos (debe adaptarse según la implementación específica)
  // Puedes utilizar una tabla de búsqueda o lógica combinacional para convertir el valor del contador a la forma de 7 segmentos

  // Asignación de salidas
  assign q = count;
  assign segmentos = ...; // Lógica para el display de 7 segmentos
  assign reset_active = reset_active_ff;

endmodule