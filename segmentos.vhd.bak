library IEEE;
use ieee.std_logic_1164.all;
entity segmentos is
	port
	(
		--Puertos de entrada
		S: in std_logic_vector(3 downto 0); --entrada es un num de 4 bits
		
		--Puertos de salida
		Cout  : in std_logic; --acarreo de la ultima suma, necesito que sea in para hacer 
		--la suma
		--ahora, para representar las sumas, el maximo en una suma es 
		--15+15 ,dado que es una suma de numeros de 4 bits
		segmento1 : out std_logic_vector(6 downto 0); --resultados S
		segmento2 : out std_logic_vector(6 downto 0);
	);
end segmentos;
architecture Behavioral of segmentos is
	 signal suma:std_logic_vector(4 downto 0);
begin
	 suma(4)<= Cout;
	 suma(3)<= S(3);
	 suma(2)<= S(2);
	 suma(1)<= S(1);
	 suma(0)<= S(0);
	 process(suma)
	 begin
		case suma is
			when "00000" =>
				segmento1 <=0000001;
				segmento2 <=0000001;
			when "00001" =>
				segmento1 <=1001111;--1
				segmento2 <=0000001;
			when "00010" =>
				segmento1 <=0010010;--2
				segmento2 <=0000001;
			when "00011" =>
				segmento1 <=0000110;--3
				segmento2 <=0000001;
			when "00100" =>
				segmento1 <=1001100;--4
				segmento2 <=0000001;
			when "00101" =>
				segmento1 <=0100100;--5
				segmento2 <=0000001;
			when "00110" =>
				segmento1 <=0100000;--6
				segmento2 <=0000001;
			when "00111" =>
				segmento1 <=0001111;--7
				segmento2 <=0000001;
			when "01000" =>
				segmento1 <=0000000;--8
				segmento2 <=0000001;
			when "01001" =>
				segmento1 <=0000100;--9
				segmento2 <=0000001;
			when "10000" =>
				segmento1 <=0001000;
				segmento2 <=0000001;
			when "10001" =>
				segmento1 <=1100000;
				segmento2 <=0000001;
			when "10010" =>
				segmento1 <=0110001;
				segmento2 <=0000001;
			when "10011" =>
				segmento1 <=1000010;
				segmento2 <=0000001;
			when "10100" =>
				segmento1 <=0110000;
				segmento2 <=0000001;
			when "10101" =>
				segmento1 <=0111000;
				segmento2 <=0000001;
				--hasta aca el segmento 2 sigue siendo siempre 0
				
				